#!/bin/bash

# Bedrock Server Docker
# Author: g-flame (github.com/g-flame)
# Description: Manages Docker containers with basic operations
# Version: 0.1.2

# Configuration
DOCKER_DIR='/etc/bsd/'  # Must end with trailing slash
CONTAINER_NAME='mc-bedrock'
COMPOSE_FILE="${DOCKER_DIR}docker-compose.yml"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Error handling
set -e  # Exit on error
trap 'echo -e "${RED}Error: Script failed on line $LINENO${NC}"' ERR

# Function to check if docker is installed and running
check_docker() {
    if ! command -v docker >/dev/null 2>&1; then
        echo -e "${RED}Error: Docker is not installed${NC}"
        exit 1
    fi
    
    if ! docker info >/dev/null 2>&1; then
        echo -e "${RED}Error: Docker daemon is not running${NC}"
        exit 1
    fi
}

# Function to check if docker-compose is installed
check_docker_compose() {
    if ! command -v docker-compose >/dev/null 2>&1; then
        echo -e "${RED}Error: docker-compose is not installed${NC}"
        exit 1
    fi
}

# Function to check if compose file exists
check_compose_file() {
    if [ ! -f "$COMPOSE_FILE" ]; then
        echo -e "${RED}Error: docker-compose.yml not found at ${COMPOSE_FILE}${NC}"
        exit 1
    fi
}

# Function to show usage
show_usage() {
    echo -e "${YELLOW}Docker Management Script${NC}"
    echo "Usage: $0 [start|stop|logs]"
    echo
    echo "Commands:"
    echo "  start - Start the container"
    echo "  stop  - Stop the container"
    echo "  logs  - Show container logs"
    echo "Note: To accept EULA go /etc/bsd and edit the docker-compose.yml"
    echo "Note: This script must be run as root"
}

# Check if running as root
if [ "$(id -u)" != "0" ]; then
   echo -e "${RED}Error: This script must be run as root${NC}" 1>&2
   exit 1
fi

# Check if argument was provided
if [ $# -eq 0 ]; then
    show_usage
    exit 1
fi

# Perform initial checks
check_docker
check_docker_compose
check_compose_file
sed -i -e 's/\r$//' /usr/local/bin/bsd
# Handle commands
case "$1" in
    "start")
        echo -e "${GREEN}Starting containers...${NC}"
        docker-compose -f "$COMPOSE_FILE" up -d
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}Containers started successfully${NC}"
        fi
        ;;
    "stop")
        echo -e "${YELLOW}Stopping containers...${NC}"
        docker-compose -f "$COMPOSE_FILE" down
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}Containers stopped successfully${NC}"
        fi
        ;;
    "logs")
        echo -e "${GREEN}Showing logs for $CONTAINER_NAME...${NC}"
        docker logs -f "$CONTAINER_NAME" || {
            echo -e "${RED}Error: Failed to retrieve logs for $CONTAINER_NAME${NC}"
            exit 1
        }
        ;;
    *)
        echo -e "${RED}Error: Invalid command${NC}"
        show_usage
        exit 1
        ;;
esac